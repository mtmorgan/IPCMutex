% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ipcmutex.R, R/zzz.R
\docType{methods}
\name{lock}
\alias{lock}
\alias{trylock}
\alias{unlock}
\alias{locked}
\alias{show,Mutex-method}
\alias{.SHM_MUTEX_ID}
\title{Inter-process locks}
\usage{
lock(id = .SHM_MUTEX_ID)

trylock(id = .SHM_MUTEX_ID)

unlock(mutex)

locked(mutex)

\S4method{show}{Mutex}(object)
}
\arguments{
\item{id}{character(1) identifying the lock to be obtained.}

\item{mutex}{An instance of class \code{Mutex}.}

\item{object}{An instance of class \code{Mutex}.}
}
\value{
\code{lock()} returns a \code{Mutex-class} instance.

On success, \code{trylock()} returns a \code{Mutex-class}
    instance containing an external pointer to the lock. On
    failure, \code{trylock()} returns NULL.

\code{unlock()} returns a \code{Mutex-class} instance with

\code{locked()} returns TRUE when \code{mutex} is locked,
    and FALSE otherwise.

\code{.SHM_MUTEX_ID} is a character(1) identifier used as a
    default lock. It is composed as \code{IPCMutex::<pid>}, where
    \code{<pid>} is from \code{Sys.getpid()}.
}
\description{
Inter-process locks
}
\examples{
mtx <- lock()
mtx
locked(mtx)
(mtx1 <- trylock())
unlock(mtx)
locked(mtx)

(mtx <- trylock())
unlock(mtx)

tryCatch(unlock(mtx), error = conditionMessage)

lock()
gc(); gc()
mtx <- lock()
unlock(mtx)
}

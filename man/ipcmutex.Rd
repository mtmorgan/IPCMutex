% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ipcmutex.R, R/zzz.R
\docType{methods}
\name{mutex}
\alias{mutex}
\alias{locked}
\alias{trylock}
\alias{unlock}
\alias{show,Mutex-method}
\alias{.SHM_MUTEX_ID}
\title{Inter-process locks}
\usage{
mutex(id)

locked(mutex)

trylock(mutex)

unlock(mutex)

\S4method{show}{Mutex}(object)
}
\arguments{
\item{id}{character(1) identifying the lock to be obtained.}

\item{object}{An instance of class \code{Mutex}.}
}
\value{
\code{mutex()} returns a \code{Mutex-class} instance.

\code{locked()} returns TRUE when \code{mutex} is locked,
    and FALSE otherwise.

On success, \code{trylock()} returns \code{TRUE} if the
    lock is obtained, \code{FALSE} otherwise.

\code{unlock()} returns a \code{Mutex-class} instance.

\code{.SHM_MUTEX_ID} is a character(1) identifier used as a
    default lock. It is composed as \code{IPCMutex::<pid>}, where
    \code{<pid>} is from \code{Sys.getpid()}.
}
\description{
Inter-process locks
}
\examples{
id <- cid("mtx-example")
mtx <- mutex(id)
mtx
trylock(mtx)
unlock(mtx)
locked(mtx)

## reference semantics
mty <- mtx <- mutex(id)
lock(mtx)
locked(mty)
unlock(mtx)
locked(mty)

ipcremove(id)

## finalizer triggered on garbage collection
id <- cid("mtx-gc")
mtx <- mutex(id)

lock(mtx)
locked(mtx)
rm(mtx)
gc(); gc()
locked(mutex(id))

ipcremove(id)

}
